/**************************************************************************/
/*  Copyright (C) 2007 by ShuGW(Mr)                                       */
/*  All Rights Reserved                                                   */
/*  WRITER:     ShuGW                                                     */
/*  Purpose:    通用函数头文件                                            */
/*  FILE NAME:	gnr_fnc.h                                                 */
/*  Ver:	    Ver0.01.20071020                                          */
/*	MCU:	    STC89C58                                                  */
/*  Crystal:    11.0592MHz  											  */ 
/*  RUN BASED on:   WQGB_V0.05.20071006.PCB  Hardware                     */
/*  project:  WQPD-LAMP                                                   */
/**************************************************************************/

#ifndef  _CLASS_H
#define  _CLASS_H
/*======================================================*/
//包含头文件
/*======================================================*/


#include "main.h"

/*================================================*/
//宏定义
/*================================================*/
#define LEFT_MOVE	0
#define RIGHT_MOVE	1

//函数声明
/*================================================*/
/**************************************************************************************************
* 函数原型 : void setmem(UCHAR* pmem, UCHAR init_val, UINT length)
* 功    能 : 初始化内存初值
* 入口参数 : 
* 出口参数 : void
* 返    回 : void
* 全局变量 : 
* 创建日期 : 2008-01-06
* 版	本 : V0.01.20080106
* 说    明 : 
**************************************************************************************************/
void setmem(u8* pmem, u8 init_val, u16 length);

/**************************************************************************************************
* 函数原型 : void cpymem(UCHAR* pmem, PUCHAR sval, UINT length)
* 功    能 : 拷贝内存
* 入口参数 : 
* 出口参数 : void
* 返    回 : void
* 全局变量 : 
* 创建日期 : 2008-01-06
* 版	本 : V0.01.20080106
* 说    明 : 
**************************************************************************************************/
void cpymem(u8* pmem, u8* sval, u16 length);

/**************************************************************************************************
* 函数原型 : UCHAR cmpmem(UCHAR* pmem, PUCHAR sval, UINT length)
* 功    能 : 比较内存
* 入口参数 : 
* 出口参数 : void
* 返    回 : 
* 全局变量 : 
* 创建日期 : 2008-01-06
* 版	本 : V0.01.20080106
* 说    明 : 
**************************************************************************************************/
u8 cmpmem(u8* pmem, u8* sval, u16 length);

/**************************************************************************************************
* 函数原型 : UINT cpystr(PUCHAR pdmem, PUCHAR psmem)
* 功    能 : 字符串拷贝
* 入口参数 : 
* 出口参数 : void
* 返    回 : void
* 全局变量 : 
* 创建日期 : 2008-01-06
* 版	本 : V0.01.20080106
* 说    明 : 
**************************************************************************************************/
u16 cpystr(u8* pdmem, u8* psmem);

/**************************************************************************************************
* 函数原型 : UCHAR cmpare_string(const UCHAR * cmpared_string, UCHAR* cmpare_string)
* 功    能 : 比较字符串
* 入口参数 : 
* 出口参数 : 
* 返    回 : 
* 全局变量 : 
* 创建日期 : 2008-01-06
* 版	本 : V0.01.20080106
* 说    明 : 
**************************************************************************************************/
u8 cmpare_string(uc8 * cmpared_string, u8* cmpare_string);


/**************************************************************************************************
* 函数原型 : void hextostr(UCHAR f_hex, PUCHAR f_str)
* 功    能 : 一个HEX数据转换成字符串数据
* 入口参数 : UCHAR f_hex 被转换的HEX数据
* 出口参数 : PUCHAR f_str 转换成的字符串数据地址
* 返    回 : 空
* 全局变量 : 无
* 创建日期 : 2008-04-14
* 版	本 : V0.01.20080414
* 说    明 : 
**************************************************************************************************/
void hex2str(u8 f_hex, u8* f_str);


/**************************************************************************************************
* 函数原型 : void shorttostr(UINT f_short, PUCHAR f_str)
* 功    能 : 一个短整型数据转换成字符串
* 入口参数 : UINT f_short 被转换的整型数据
* 出口参数 : PUCHAR f_str 转换成字符串的地址
* 返    回 : 空
* 全局变量 : 无
* 创建日期 : 2008-04-14
* 版	本 : V0.01.20080414
* 说    明 : 
**************************************************************************************************/
void short2str(u16 f_short, u8* f_str);

/**************************************************************************************************
* 函数原型 : void mem_exchange(PUCHAR f_pmem, UCHAR f_num)
* 功    能 : 使一段连续内存中的数据前后调换
* 入口参数 : UCHAR f_num 要调换内存的字节数
* 出口参数 : PUCHAR f_pmem 被调换的内存地址
* 返    回 : 空
* 全局变量 : 无
* 创建日期 : 2008-04-14
* 版	本 : V0.01.20080414
* 说    明 : 
**************************************************************************************************/
void mem_exchange(u8* f_pmem, u8 f_num);

/**************************************************************************************************
* 函数原型 : void byte_exchange(PUCHAR f_pmem, UCHAR f_num)
* 功    能 : 字节的高半字节与低半字节调换
* 入口参数 : UCHAR f_num 要调换内存的字节数
* 出口参数 : PUCHAR f_pmem 被调换的内存地址 
* 返    回 : 空
* 全局变量 : 无
* 创建日期 : 2008-04-26
* 版	本 : V0.01.20080426
* 说    明 : 
**************************************************************************************************/
void byte_exchange(u8* f_pmem, u8 f_num);

/**************************************************************************************************
* 函数原型 : void byte_exchange(PUCHAR f_pmem, UCHAR f_num)
* 功    能 : 在内在中前后调换
* 入口参数 : UCHAR f_num 要调换内存的字节数
* 出口参数 : PUCHAR f_pmem 被调换的内存地址 
* 返    回 : 空
* 全局变量 : 无
* 创建日期 : 2008-04-26
* 版	本 : V0.01.20080426
* 说    明 : 
**************************************************************************************************/
void parity_exchange(u8* f_pmem, u8 f_num);

/**************************************************************************************************
* 函数原型 : void inden_str(PUCHAR f_str)
* 功    能 : 整理以字符'0'开头的字符串
* 入口参数 : 无
* 出口参数 : PUCHAR f_str 被整理的字符串
* 返    回 : 无
* 全局变量 : 无
* 创建日期 : 2008-04-14
* 版	本 : V0.01.20080414
* 说    明 : 比如"0123"整理成"123"
**************************************************************************************************/
void inden_str(u8* f_str);

/**************************************************************************************************
* 函数原型 : void move_str(PUCHAR f_str,UCHAR f_mve_dir, UCHAR f_mve_num)
* 功    能 : 向左或向右移动字符串
* 入口参数 : UCHAR f_mve_dir 移动方向(0 左移, 1 右移)
			 UCHAR f_mve_num 移动位数
* 出口参数 : PUCHAR f_str 被移动的字符串
* 返    回 : 空
* 全局变量 : 无
* 创建日期 : 2008-04-14
* 版	本 : V0.01.20080414
* 说    明 : 
**************************************************************************************************/
void move_str(u8* f_str,u8 f_mve_dir, u8 f_mve_num);

/**************************************************************************************************
* 函数原型 : UCHAR sbuftobcd(const PUCHAR f_sbuf, UINT* f_bcd)
* 功    能 : 把缓存中连续的数字字母转换成BCD码
* 入口参数 : PUCHAR f_sbuf	缓存地址
* 出口参数 : UINT* f_bcd	转换成的BCD码地址
* 返    回 : 缓存中转换的数字字母个数
* 全局变量 : 无
* 创建日期 : 2008-04-22
* 版	本 : V0.01.20080422
* 说    明 : 
**************************************************************************************************/
u8 sbuf2bcd(u8*  f_sbuf, u16* f_bcd);


/**************************************************************************************************
* 函数原型 : UCHAR bcdtohex(UINT f_bcd)
* 功    能 : 把(255-0)范围内的BCD转换成HEX码
* 入口参数 : UINT f_bcd	被转换的BCD码
* 出口参数 : 无
* 返    回 : 转换成的HEX码
* 全局变量 : 无
* 创建日期 : 2008-05-07
* 版	本 : V0.01.20080507
* 说    明 : 
**************************************************************************************************/
u8 bcd2hex(u16 f_bcd);

/**************************************************************************************************
* 函数原型 : UCHAR chartohex(PUCHAR f_pchar)
* 功    能 : 把两位字符CHAR转换成HEX码
* 入口参数 : PUCHAR f_pchar	被转换的字符CHAR的指针
* 出口参数 : 无
* 返    回 : 转换成的HEX码
* 全局变量 : 无
* 创建日期 : 2008-05-09
* 版	本 : V0.01.20080509
* 说    明 : 
**************************************************************************************************/
u8 char2hex(u8* f_pchar);



#endif

